---

- name: "Include vars/{{ ansible_os_family }}.yml"
  include_vars: "{{ ansible_os_family }}.yml"

- name: "Include install-{{ ansible_os_family }}.yml"
  include: "install-{{ ansible_os_family }}.yml"

- name: "Create {{ nsd_config_dir }}"
  file:
    path: "{{ nsd_config_dir }}"
    state: directory

- name: Include x509_certificate
  include_role:
    name: trombik.x509_certificate
  when:
    - nsd_include_x509_certificate

- name: Create nsd_zones files (raw config)
  template:
    dest: "{{ nsd_config_dir }}/{{ item.name }}"
    src: zone.j2
    group: "{{ nsd_group }}"
    mode: 0640
  with_items: "{{ nsd_zones }}"
  when:
    - (not 'state' in item ) or (item.state == 'present')
    - "'config' in item"
    - item.config | length > 0
  notify:
    - Restart nsd_service

- name: Create nsd_zones files (template-based)
  template:
    dest: "{{ nsd_config_dir }}/{{ item.name }}"
    src: config_yaml.j2
    group: "{{ nsd_group }}"
    mode: 0640
  with_items: "{{ nsd_zones }}"
  when:
    - (not 'state' in item ) or (item.state == 'present')
    - "'yaml' in item"
  notify:
    - Restart nsd_service

- name: Delete nsd_zones files
  file:
    path: "{{ nsd_config_dir }}/{{ item.name }}"
    state: absent
  with_items: "{{ nsd_zones }}"
  when:
    - "'state' in item"
    - "item.state == 'absent'"
  notify:
    - Restart nsd_service

- name: "Create {{ nsd_config_file }}"
  template:
    src: nsd.conf.j2
    dest: "{{ nsd_config_file }}"
    mode: 0640
    group: "{{ nsd_group }}"
    validate: nsd-checkconf -v %s
  notify:
    - Restart nsd_service

- name: "Add nsd_user to nsd_extra_groups"
  user:
    name: "{{ nsd_user }}"
    append: yes
    create_home: no
    groups: "{{ nsd_extra_groups }}"

- name: Start nsd_service
  service:
    name: "{{ nsd_service }}"
    state: started
